package GUI;

import Database.DBFetch;
import GameType.*;
import GameDifficulty.*;
import Engine.Player;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JFrame;
import javax.swing.JRadioButton; 
import javax.swing.SwingUtilities;

/**
 * The panel that contains some settings before starting the game.
 * @author Jakub Włodarz i Przemysław Pędziwiatr.
 */
public class GamePreAreaPanel extends javax.swing.JPanel {

    /**
     * Constucts a new gane area panel.
     */
    public GamePreAreaPanel() {
        initComponents();
        setBackground(Color.WHITE);


        String[] categories = DBFetch.fetchCategories();
        for(String cat: categories){
            categoryCombo.addItem(makeObj(cat));
        }
        categoryCombo.addItem(makeObj("Wszystko"));
        
        
        player2Label.setVisible(false);
        playerName2.setVisible(false);

        typeSingleRadio.addItemListener(new VoteItemListener());
        typeBigRadio.addItemListener(new VoteItemListener());
        typePvpRadio.addItemListener(new VoteItemListener());

    }

    
    /**
     * ItemListener used for showing input fields (player names) and selecting
     * game type.
     */
    class VoteItemListener implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent e) {
            boolean selected = (e.getStateChange() == ItemEvent.SELECTED);
            AbstractButton button = (AbstractButton) e.getItemSelectable();
            if (selected && (button.getActionCommand() == null
                    ? typePvpRadio.getActionCommand() == null : 
                    button.getActionCommand().equals(typePvpRadio.getActionCommand()))) {
                player1Label.setText("Wpisz imię pierwszego gracza:");
                player2Label.setVisible(true);
                playerName2.setVisible(true);
            } else {
                player1Label.setText("Wpisz swoje imię:");
                player2Label.setVisible(false);
                playerName2.setVisible(false);
            }

        }

    }

    /**
     * Creates a String object used in category ComboBox (with 
     * overriden toString).
     * @param item The string to be set.
     * @return Object contaning the string.
     */
    private Object makeObj(final String item) {
        return new Object() {
            public String toString() {
                return item;
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameTypeButGroup = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        statusBarText = new javax.swing.JLabel();
        playButton = new javax.swing.JButton();
        levelSlider = new javax.swing.JSlider();
        levelLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        typeSingleRadio = new javax.swing.JRadioButton();
        typePvpRadio = new javax.swing.JRadioButton();
        categoryLabel = new javax.swing.JLabel();
        categoryCombo = new javax.swing.JComboBox();
        graphicPanel = new javax.swing.JPanel();
        graphicIcLabel = new javax.swing.JLabel();
        player1Label = new javax.swing.JLabel();
        player2Label = new javax.swing.JLabel();
        playerName1 = new javax.swing.JTextField();
        playerName2 = new javax.swing.JTextField();
        typeBigRadio = new javax.swing.JRadioButton();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        statusBarText.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        statusBarText.setForeground(new java.awt.Color(255, 255, 255));
        statusBarText.setText("Choose a category.");
        statusBarText.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusBarText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusBarText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
        );

        playButton.setBackground(new java.awt.Color(51, 51, 51));
        playButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        playButton.setForeground(new java.awt.Color(255, 255, 255));
        playButton.setText("Graj!");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        levelSlider.setMaximum(2);
        levelSlider.setToolTipText("");
        levelSlider.setValue(1);
        levelSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                levelSliderStateChanged(evt);
            }
        });

        levelLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        levelLabel.setText("Wybierz poziom trudności (wybrany: średni).");

        typeLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        typeLabel.setText("Wybierz rodzaj gry.");

        gameTypeButGroup.add(typeSingleRadio);
        typeSingleRadio.setSelected(true);
        typeSingleRadio.setText("Pojedyncza gra");
        typeSingleRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                typeSingleRadioMouseEntered(evt);
            }
        });

        gameTypeButGroup.add(typePvpRadio);
        typePvpRadio.setText("Gracz vs Gracz");
        typePvpRadio.setToolTipText("");
        typePvpRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                typePvpRadioMouseEntered(evt);
            }
        });

        categoryLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        categoryLabel.setText("Wybierz kategorię wyrazów:");

        graphicIcLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/BCKG.jpg"))); // NOI18N
        graphicIcLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        javax.swing.GroupLayout graphicPanelLayout = new javax.swing.GroupLayout(graphicPanel);
        graphicPanel.setLayout(graphicPanelLayout);
        graphicPanelLayout.setHorizontalGroup(
            graphicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphicPanelLayout.createSequentialGroup()
                .addComponent(graphicIcLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        graphicPanelLayout.setVerticalGroup(
            graphicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(graphicIcLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        player1Label.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        player1Label.setText("Wpisz swoje imię:");

        player2Label.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        player2Label.setText("Wpisz imię drugiego gracza:");

        playerName1.setText("Tomek");

        playerName2.setText("Jarek");

        gameTypeButGroup.add(typeBigRadio);
        typeBigRadio.setText("WIELKA gra");
        typeBigRadio.setToolTipText("");
        typeBigRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                typeBigRadioMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(levelLabel)
                            .addComponent(typeLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 2, Short.MAX_VALUE)
                                .addComponent(levelSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(categoryLabel)
                                    .addComponent(player1Label)
                                    .addComponent(player2Label)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(typePvpRadio)
                                            .addComponent(typeSingleRadio)
                                            .addComponent(typeBigRadio)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(categoryCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(playerName1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(playerName2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(graphicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(graphicPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(playButton, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(levelLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(levelSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(typeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(typeSingleRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(typeBigRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(typePvpRadio)
                        .addGap(18, 18, 18)
                        .addComponent(categoryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(categoryCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(player1Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playerName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(player2Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playerName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                String gameCategory = categoryCombo.getSelectedItem().toString();
                GameType gameType = setGameType(gameCategory);
                Player gamePlayers[] = setPlayers(gameType);
                GameDifficulty gameDiff = setGameDifficulty();
                
                GameAreaPanel GAP = new GameAreaPanel(gameType, gameDiff, gamePlayers, gameCategory);
                JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(GamePreAreaPanel.this);
                topFrame.getContentPane().removeAll();
                topFrame.add(GAP);
                topFrame.validate();
                topFrame.repaint();

            }
        });
    }//GEN-LAST:event_playButtonActionPerformed

    /**
     * Sets the game type.
     * @return GameType object containg the game type.
     */
    private GameType setGameType(String gameCategory) {
        Enumeration<AbstractButton> jButtons = gameTypeButGroup.getElements();
        while (jButtons.hasMoreElements()) {
            JRadioButton jRB = (JRadioButton) jButtons.nextElement();
            if (jRB.isSelected()) {
                switch (jRB.getActionCommand()) {
                    case "Pojedyncza gra": {
                        return new GameTypeSingle();
                    }
                    case "WIELKA gra": {
                        return new GameTypeBig(gameCategory);
                    }
                    case "Gracz vs Gracz": {
                        return new GameTypePvp();
                    }
                    
                }
                break;
            }
        }
        
        return null;
    }

    /**
     * Sets the game difficulty,
     * @return GameDifficulty object containing the game difficulty.
     */
    private GameDifficulty setGameDifficulty() {
        switch (levelSlider.getValue()) {
            case 0: {
                return new GameDifficulty("EASY",1);
            }
            case 1: {
                 return new GameDifficulty("MEDIUM",2);
            }
            case 2: {
                return new GameDifficulty("HARD",3);
            }
            default: {
                return new GameDifficulty("MEDIUM",2);
            }
        }
    }
    
    /**
     * Creates one/two players and assigns them their names.
     * @param gType The type of game used for determining the amount of players.
     */
    private Player[] setPlayers(GameType gType) {
        Player[] players = {null,null};
        for (int i = 0; i < gType.getPlayersAmount(); i++) {
            players[i] = new Player();
        }

        if (gType.getPlayersAmount() > 1) {
            players[1].setName(playerName2.getText());
        }
        
        players[0].setName(playerName1.getText());
        
        return players;

    }

    private void levelSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_levelSliderStateChanged
        String labelLevel;
        switch (levelSlider.getValue()) {
            case 0: {
                labelLevel= "łatwy"; break;
            }
            case 1: {
                labelLevel= "średni"; break;
            }
            case 2: {
                labelLevel = "trudny"; break;
            }
            default: {
                labelLevel = "średni"; break;
            }
        }
        levelLabel.setText("Wybierz poziom trudności (wybrany: " + labelLevel + ").");
    }//GEN-LAST:event_levelSliderStateChanged

    // <editor-fold defaultstate="collapsed" desc="ToolTips">
    private void typeSingleRadioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_typeSingleRadioMouseEntered
        statusBarText.setText("Pojedyncza gra - wystarczy rozwiązać jedną zagadkę.");
    }//GEN-LAST:event_typeSingleRadioMouseEntered

    private void typePvpRadioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_typePvpRadioMouseEntered
        statusBarText.setText("Gracz vs gracz - możesz zmierzyć się z przeciwnikiem grając na zmianę.");
    }//GEN-LAST:event_typePvpRadioMouseEntered

    private void typeBigRadioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_typeBigRadioMouseEntered
        statusBarText.setText("WIELKA gra - spróbuj odgadnąć jak najwięcej wyrazów z gry. Najlepsze wyniki zostaną zapisane.");
    }//GEN-LAST:event_typeBigRadioMouseEntered
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Generated Variabes">           
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox categoryCombo;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.ButtonGroup gameTypeButGroup;
    private javax.swing.JLabel graphicIcLabel;
    private javax.swing.JPanel graphicPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JSlider levelSlider;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel player1Label;
    private javax.swing.JLabel player2Label;
    private javax.swing.JTextField playerName1;
    private javax.swing.JTextField playerName2;
    private javax.swing.JLabel statusBarText;
    private javax.swing.JRadioButton typeBigRadio;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JRadioButton typePvpRadio;
    private javax.swing.JRadioButton typeSingleRadio;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>
}
